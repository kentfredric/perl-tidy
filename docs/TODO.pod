=head1 Perltidy TODO List

This is a "wish-list" of features to add and things to do.  

=head2 Improved Vertical Alignment

Coding modifications are underway to improve the vertical alignment
logic.

=head2 Modularization

Modularization work is in progress.

=head2 -lp as default

One of the next versons may set -lp as a default parameter.  It really
isn't clear in the perlstyle guidelines if this is recommended, but it
does seem to be in very common use.

=head2 XML

The ability to write a tokenized script in XML is under consideration.

=head2 Fix numerous little formatting issues

There are a large number of little open formatting issues besides 
vertical alignment.

One item is that at present, the -lp option breaks lists like this:

     my $data = pack(
                      "vvvvvvvvv", $xWn,     $yWn,     $dxWn,
                      $dyWn,       $grbit,   $itabCur, $itabFirst,
                      $ctabsel,    $wTabRatio
                      );

This is the default because it simplifies editing the list.
I would like to provide an option which does not break after the '(',
and before the terminal ), like this:

     my $data = pack( "vvvvvvvvv", $xWn,     $yWn,     $dxWn,
                      $dyWn,       $grbit,   $itabCur, $itabFirst,
                      $ctabsel,    $wTabRatio);

This should be easy to implement after the new vertical aligner is
completed.

=head2 BUGS

There are still a couple of bugs listed in the BUGS file that need
to be fixed.  These are low priority compared to formatting
issues, but need to be done.

=head2 Documentation

A FAQ is being written to explain some of the
more subtle formatting issues, and to give examples of different
styles.

The tokenizer needs extensive documentation before it can be released
as a separate module.

=head2 HTML writer

The HTML writer does not colorize interpolated identifiers in here
documents or quoted strings.  The tokenizer outputs interpolation
information for here docs; it still needs to be updated to do this for
multiline quotes.  Then code needs to be written to scan for and markup
identifiers.

=head2 Tokenization issues

Token type 'M' (for Method) has been reserved for subroutine definition
names.  It needs to be implementd; I've patched around this in the html
writer for now.  I'm considering new token types for prototypes and
attributes, to simplify parsing and formatting.

There are some subtle issues with distinguishing block types that should
be addressed to make the tokenizer more correct, even though they do not
interfere with code beautification.  For example, in most cases the type
of a brace is known when it is encountered. But given this coding
 
 sub something {
     {
        bla, bla
     }
     ..
 }

you have to examine the first few tokens of the interior set of to
braces to see if it is a code block or anonymous hash reference.  This
needs to be done.

=head2 Option to reformat block comments

I'm looking into an option to use Text::Autoformat to reformat comments.
Thanks to Tim Maher for this suggestion.  Some preliminary testing suggests
that this might best be an interactive tool, something like a spelling checker,
which would walk through a file looking for groups of comments, and present a
proposed a reformatting to the user with a Y/N response request.

