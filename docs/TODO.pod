=head1 Perltidy TODO List

This is a "wish-list" of features to add and things to do.  All of these
are of interest, but there is no particular schedule for implementing
them.  

=head2 improved ?: formatting

An indentation level should be associated with ?: statements.
This will make nested ?: statements more readable.

=head2 Improved Vertical Alignment

Improved vertical alignment has been on the list for some time.  It's
important, but I need a good sized block of coding time to get
it done because it is very tedious.

=head2 Fix numerous little formatting issues

There is, and always will be, a large number of other relatively minor
formatting issues that need to be addressed.  

=head2 XML Output

A -xml option would allow the creation of simple utilities to reliably
manipulate perl code.

=head2 Documentation

A FAQ is needed to explain some of the more subtle formatting
issues, and to give examples of different styles.

The tokenizer needs extensive documentation before it can be released as
a separate module.

=head2 HTML writer

The HTML writer does not colorize interpolated identifiers in here
documents or quoted strings.  The tokenizer outputs interpolation
information for here docs; it still needs to be updated to do this for
multi-line quotes.  Then code needs to be written to scan for and markup
identifiers.

=head2 Tokenization issues

There are some subtle issues with distinguishing block types that should
be addressed to make the tokenizer more correct, even though they do not
interfere with code beautification.  For example, in most cases the type
of a brace is known when it is encountered. But given this coding
 
 sub something {
     {
        bla, bla
     }
     ..
 }

we have to examine the first couple of tokens of the interior 
braces to see if it is a code block or anonymous hash reference.  This
needs to be done.  Also, brace types of something like ${ ... } are
not currently labeled as code blocks because this simplifies formatting.
However, this should be done eventually for correctness.

Token type 'M' (for Method) has been reserved for subroutine definition
names.  It needs to be implemented; I've patched around this in the html
writer for now.  I'm considering new token types for prototypes and
attributes, to simplify parsing and formatting.

