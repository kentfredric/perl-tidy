Perltidy TODO List
    This is a "wish-list" of features to add and things to do.

  Fix numerous little formatting issues

    There is (and always will be) a large backlog of little formatting
    issues in which the formatting could be better. These are things like
    improving line break choices and improving vertical alignment. I'm
    working on them as time permits.

  Improved Vertical Alignment

    Coding modifications are underway to significantly enhance the vertical
    alignment. This is an extensive update and will take another month or
    so, since it is summer.

  BUGS

    There are still a couple of bugs listed in the BUGS file that need to be
    fixed. These are low priority compared to formatting issues, but need to
    be done.

  Option to reformat block comments

    I'm looking into an option to use Text::Autoformat to reformat comments.
    Thanks to Tim Maher for this suggestion. Some preliminary testing
    suggests that this might best be an interactive tool, something like a
    spelling checker, which would walk through a file looking for groups of
    comments, and present a proposed a reformatting to the user with a Y/N
    response request.

  Automated testing

    An automated method for testing many combinations of parameter options
    on a variety of test files would be very helpful.

  Documentation

    A FAQ or maybe COOKBOOK needs to be written, to explain some of the more
    subtle formatting issues.

  Tokenization issues

    It would be nice to introduce some more token types, such as procedure
    calls, so that they can easily be given separate colors in html files.

    There are some subtle issues with distinguishing block types that should
    be addressed to make the tokenizer more correct, even though they do not
    interfere with code beautification.

  Modularization

    It is planned to release perltidy in modules, hopefully this year.
    However, the development of the tokenizer and formatter is still very
    tightly coupled, and there are still some open tokenization issues that
    need to be resolved before the program is split into pieces. Anyone is
    welcome, of course, to extract the tokenizer and use it for other
    projects, but it would be good to let me know so that we can coordinate
    updates to the tokenizer.

